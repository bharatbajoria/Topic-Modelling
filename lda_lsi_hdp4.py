# -*- coding: utf-8 -*-
"""LDA-LSI-HDP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UynCakECq9PLK5RgUaM8XiIc6aVUhy3x
"""

def model_build(LdaMulticore,LsiModel,HdpModel,corpus,dictionary,num_topics):  
  lda=  LdaMulticore(corpus,num_topics,id2word=dictionary,workers=8)
  lsi=  LsiModel(corpus, num_topics, id2word=dictionary)
  hdp=  HdpModel(corpus, id2word=dictionary)

  return lda, lsi, hdp

def word_df(lda,lsi,hdp,num_words_model,np,pd):
  ldatopics = [[word for word, prob in topic] for topicid, topic in lda.show_topics(num_words=num_words_model,formatted=False)]
  col_data=[]
  a='Topic- '
  for i in range(len(ldatopics)):
    col_data.append(a+str(i+1))

  topic_df_lda=pd.DataFrame(data=ldatopics,index=col_data)
  topic_df_T_lda=topic_df_lda.T

  #LSI Data Frame
  lsitopics = [[word for word, prob in topic] for topicid, topic in lsi.show_topics(num_words=num_words_model,formatted=False)]
    
  topic_df_lsi=pd.DataFrame(data=lsitopics,index=col_data)
  topic_df_T_lsi=topic_df_lsi.T

  #HDP Data Frame
  hdptopics = [[word for word, prob in topic] for topicid, topic in hdp.show_topics(num_words=num_words_model,formatted=False)]
  col_data=[]
  a='Topic- '
  for i in range(len(hdptopics)):
    col_data.append(a+str(i+1))

  topic_df_hdp=pd.DataFrame(data=hdptopics,index=col_data)
  topic_df_T_hdp=topic_df_hdp.T

  return topic_df_T_lda,topic_df_T_lsi,topic_df_T_hdp

def diction(tokens,TfidfModel,Dictionary):
  dictionary=Dictionary([i for i in tokens])
  corpus=[dictionary.doc2bow(sents) for sents in tokens]#getting bag of words.
  tfidf=TfidfModel(corpus)
  corpus=tfidf[corpus]
  return dictionary,corpus